{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","_ref","data","location","url","href","React","createElement","Layout","layout","currentPath","SEO","title","style","display","gridTemplateColumns","gridGap","allMarkdownRemark","edges","map","_ref2","index","_node$frontmatter$ima","node","Excerpt","key","frontmatter","date","timeToRead","text","excerpt","tags","frontmattags","slug","fields","link","image","childImageSharp","fluid","product","productLink","category","etsy","etsyDescription","redbubble"],"mappings":"gKAgFeA,UAvEf,SAAkBC,GAAmB,IAAlB,KAACC,EAAI,SAAEC,GAASF,EAC/B,MAAMG,EAAMD,EAASE,KAAOF,EAASE,KAAO,GAIhD,OACEC,IAAAC,cAACC,IAAM,CAACC,OAAO,QAAQC,YAAaN,GAClCE,IAAAC,cAACI,IAAG,CAACC,MAAM,SACXN,IAAAC,cAAA,WAASM,MAAO,CAAEC,QAAS,OAAQC,oBAAqB,0BACxDC,QAAS,SACRd,EAAKe,kBAAkBC,MAAMC,IAC1B,CAAAC,EAASC,KAAK,IAAAC,EAAA,IAAb,KAACC,GAAKH,EAAA,OACLd,IAAAC,cAACiB,IAAO,CAACC,IAAKJ,EAAOT,MAAOW,EAAKG,YAAYd,MAC3Ce,KAAMJ,EAAKG,YAAYC,KACvBC,WAAYL,EAAKK,WACrBC,KAAMN,EAAKO,QACXC,KAAMR,EAAKS,aACXC,KAAMV,EAAKW,OAAOD,KAClBE,KAAMZ,EAAKG,YAAYS,KACvBC,MAA6B,QAAxBd,EAAEC,EAAKG,YAAYU,aAAK,IAAAd,OAAA,EAAtBA,EAAwBe,gBAAgBC,MAC/CC,QAAShB,EAAKG,YAAYa,QAC1BC,YAAajB,EAAKG,YAAYc,YAC9BC,SAAUlB,EAAKG,YAAYe,SAC3BC,KAAMnB,EAAKG,YAAYgB,KACvBC,gBAAiBpB,EAAKG,YAAYiB,gBAClCC,UAAWrB,EAAKG,YAAYkB","file":"component---src-pages-index-js-87ef4ab2e356b99c47f1.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n// import Image from \"../components/image\"\nimport SEO from \"../components/seo\"\nimport Excerpt from \"../components/excerpt\"\nimport { numberOfImages } from '../helpers/index.js';\n\n\nfunction IndexPage({data, location}){\n    const url = location.href ? location.href : '';\n    // console.log(data)   \n\n  \nreturn (\n  <Layout layout=\"front\" currentPath={url}>\n    <SEO title=\"Home\" />\n    <section style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, 100%)',\n    gridGap: '1rem'}}>\n    {data.allMarkdownRemark.edges.map(\n        ({node}, index) => (\n          <Excerpt key={index} title={node.frontmatter.title}\n            date={node.frontmatter.date}\n            timeToRead={node.timeToRead}\n        text={node.excerpt}\n        tags={node.frontmattags}\n        slug={node.fields.slug}\n        link={node.frontmatter.link}\n        image={node.frontmatter.image?.childImageSharp.fluid}\n        product={node.frontmatter.product}\n        productLink={node.frontmatter.productLink}\n        category={node.frontmatter.category}\n        etsy={node.frontmatter.etsy}\n        etsyDescription={node.frontmatter.etsyDescription}\n        redbubble={node.frontmatter.redbubble}\n         />\n    ))}\n    </section>\n\n  </Layout>)\n}\n\nexport const query = graphql`\nquery getPostExcerpts {\n  allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}, limit: 20) {\n    edges {\n      node {\n        id\n        excerpt(format: PLAIN, pruneLength: 600, truncate: true)\n        frontmatter {\n          title\n          date\n          category\n          tags\n          image {\n            childImageSharp {\n              fluid(fit: COVER, maxWidth: 800, maxHeight: 400, cropFocus: ENTROPY) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          product\n          link\n          etsy\n          etsyDescription\n          redbubble\n        }\n        timeToRead\n        fields {\n          slug\n        }\n      }\n    }\n  }\n}\n\n\n\n`\n\nexport default IndexPage\n"],"sourceRoot":""}