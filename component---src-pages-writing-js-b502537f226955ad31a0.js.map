{"version":3,"sources":["webpack:///./src/components/writingEntry.js","webpack:///./src/components/writingSection.js","webpack:///./src/pages/writing.js"],"names":["WritingEntry","_ref","frontmatter","title","subtitle","link","date","publication","issue","slug","React","createElement","Link","to","href","WritingSection","entries","data","level","parent","group_by_key","Fragment","property","arrayOfGroups","groups","i","length","group","groupIndex","indexOf","push","category","map","item","index","groupBy","key","WritingPage","location","url","Layout","currentPath","SEO","arrayOfCollections","categories","dataObject","allMarkdownRemark","edges","keys","node","hasOwnProperty","categoryIndex","adjustedObject","fields","renderCollectionsByGenre"],"mappings":"0KAIe,SAASA,EAAYC,GAAgB,IAAf,YAACC,GAAYD,EAE9C,MAAM,MACFE,EAAK,SACLC,EAAQ,KACRC,EAAI,KACJC,EAAI,YACJC,EAAW,MAEXC,EAAK,KACLC,GAQKP,EAET,OACCQ,IAAAC,cAAA,UACOD,IAAAC,cAAA,SAAGD,IAAAC,cAACC,OAAI,CAACC,GAAK,KAAIJ,GAASN,IAAiBO,IAAAC,cAAA,WAC5CD,IAAAC,cAAA,UAAMJ,GAAoBC,GAAW,WAAaA,EAAO,IACxD,MAAQF,EAAK,IAAGD,GAASK,IAAAC,cAAA,KAAGG,KAAMT,GAAM,WCzBtC,SAASU,EAAcd,GAAyD,IAAxD,MAAEE,EAAOa,QAASC,EAAI,MAAEC,EAAK,OAAEC,EAAM,aAAEC,GAAcnB,EA2C1F,OACCS,IAAAC,cAAA,eAvCa,IAAVO,EAAuBR,IAAAC,cAAA,UAAKR,GAClB,IAAVe,EAAuBR,IAAAC,cAAA,UAAKR,GAC5Be,GAAU,EAAaR,IAAAC,cAAA,UAAKR,GAExBO,IAAAC,cAAA,UAAKR,GAqCTgB,EAAST,IAAAC,cAAAD,IAAAW,SAAA,KAAE,IAhChB,SAAiBC,GAChB,MAAMC,EAAgB,GACtB,IAAIC,EAAS,GAEb,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAKS,OAAQD,IAAK,CACrC,MAAME,EAAQV,EAAKQ,GAAGH,GAItB,IAAIM,EAAaJ,EAAOK,QAAQF,IACZ,IAAhBC,IACHJ,EAAOM,KAAKH,GACZJ,EAAcO,KAAK,CAACC,SAAUJ,EAAOX,QAAS,KAC9CY,EAAaJ,EAAOE,OAAS,GAG9BH,EAAcK,GAAYZ,QAAQc,KAAKb,EAAKQ,IAM5C,OAAOF,EAAcS,IAAI,CAACC,EAAMC,IAE9BxB,IAAAC,cAACI,EAAc,CAACZ,MAAO8B,EAAKF,SAAUb,MAAOA,EAAM,EAAGC,QAAQ,EAAOH,QAASiB,EAAKjB,WAQpEmB,CAAQf,IACvBV,IAAAC,cAAA,UACMM,EAAKe,IAAI,CAACC,EAAMC,IAEbxB,IAAAC,cAACX,EAAY,CAACoC,IAAM,GAAEjC,mBAAuB+B,IAAShC,YAAa+B,OCmDlEI,UAlGf,SAAoBpC,GAAmB,IAAlB,KAACgB,EAAI,SAAEqB,GAASrC,EACjC,MAAMsC,EAAMD,EAASxB,KAAOwB,EAASxB,KAAO,GAwChD,OACEJ,IAAAC,cAAC6B,IAAM,CAACC,YAAaF,GACnB7B,IAAAC,cAAC+B,IAAG,CAACvC,MAAM,YAxCX,WAGE,MAAMwC,EAAqB,GAK3B,IAAIC,EAAa,GACbC,EAAa5B,EAAK6B,kBAAkBC,MACpCC,EAAO,GAEX,IAAK,IAAIZ,KAAOS,EAAY,CAGxB,MAAMd,EAAWc,EAAWT,GAAKa,KAAK/C,YAAY6B,SAE7Cc,EAAWK,eAAed,IAAQY,EAAKlB,KAAKM,GAEhD,IAAIe,EAAgBP,EAAWf,QAAQE,IAChB,IAAnBoB,IACHP,EAAWd,KAAKC,GAChBY,EAAmBb,KAAK,CAACC,WAAUf,QAAS,KAC5CmC,EAAgBP,EAAWlB,OAAS,GAGtC,MACM0B,EAAiB,IADJP,EAAWT,GAAKa,KAAK/C,YACAO,KAAMoC,EAAWT,GAAKa,KAAKI,OAAO5C,MAE1EkC,EAAmBQ,GAAenC,QAAQc,KAAKsB,GAMnD,OAAOT,EAOPW,GAA2BtB,IAAI,CAAEf,EAAMiB,IAE9BxB,IAAAC,cAACI,EAAc,CAACqB,IAAK,kBAAoBF,EAAO/B,MAAOc,EAAKc,SAAUf,QAASC,EAAKD,QAASG,QAAQ,EAAMD,MAAO,EAAGE,aAAc","file":"component---src-pages-writing-js-b502537f226955ad31a0.js","sourcesContent":["import React from 'react';\nimport { Link } from \"gatsby\";\nimport Img from 'gatsby-image';\n\nexport default function WritingEntry({frontmatter}){\n\n    const { \n        title,\n        subtitle,\n        link, \n        date,\n        publication,\n        // publication_type,\n        issue, \n        slug,\n        // publishers,\n        // editors,\n        // ISBN,\n        // snippet,\n        // audio,\n        // video,\n        // tags        \n         } = frontmatter;\n\n    return (\n    \t<li>\n            <b><Link to={`..${slug}`}>{title}</Link></b><br />\n            <em>{ publication }</em>{ issue && ( \" (issue \" + issue +\")\")}\n            {\" - \" + date} { link && (<a href={link}>(link)</a>)}\n        </li>\n    )\n}","import React from \"react\"\nimport WritingEntry from \"../components/writingEntry\"\n\nexport default function WritingSection({ title, entries: data, level, parent, group_by_key }) {\n\n\t// console.log(data)\n\tfunction renderHeader() {\n\t\t// checking which level of the recursive render we are supposed to perform\n\t\tif (level === 1) { return (<h2>{title}</h2>) };\n\t\tif (level === 2) { return (<h3>{title}</h3>) };\n\t\tif (level >=  3) { return (<h4>{title}</h4>) };\n\n\t\treturn (<h2>{title}</h2>)\n\t}\n\n\t// end product is [ category: string, entries: [ 0: { key: value} ], etc.]\n\n\tfunction groupBy(property) {\n\t\tconst arrayOfGroups = [];\n\t\tlet groups = [];\n\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tconst group = data[i][property]\t\n\t\t\t// console.log('entry is', data[i])\n\t\t\t// console.log('group is', group)\t\t\n\n\t\t\tlet groupIndex = groups.indexOf(group);\n\t\t\tif (groupIndex === -1) {\n\t\t\t\tgroups.push(group)\n\t\t\t\tarrayOfGroups.push({category: group, entries: []})\n\t\t\t\tgroupIndex = groups.length - 1;\n\t\t\t\t}\n\n\t\t\tarrayOfGroups[groupIndex].entries.push(data[i])\n\t\t\t}\n\n\t\t\t// console.log('arrayOfGroups', arrayOfGroups)\n\t\t\t// console.log('groups', groups)\n\n\t\t\treturn arrayOfGroups.map((item, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<WritingSection title={item.category} level={level+1} parent={false} entries={item.entries} />\n\t\t\t\t\t)\n\t\t\t})\n\t\t}\n\n\t\treturn (\n\t\t\t<section>\n\t\t\t\t{ renderHeader() }\n\t\t\t\t{ parent? (<> { groupBy(group_by_key) }</>) : (\n\t\t\t\t\t<ul>\n\t\t\t\t\t    { data.map((item, index) => {\n\t\t\t\t\t       return (\n\t\t\t\t\t       \t <WritingEntry key={`${title}_writing_entry_${index}`} frontmatter={item} />\n\t\t\t\t\t        )\n\t\t\t\t\t      }\n\t\t\t\t\t    )}\n\t\t\t\t\t</ul>)}\n\t\t\t</section>\n\t\t)\n\t}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport WritingSection from \"../components/writingSection\"\n\nfunction WritingPage({data, location}){\n    const url = location.href ? location.href : '';\n\n    function renderCollectionsByGenre() {\n\n      // const collectionsArray = [];\n      const arrayOfCollections = [];\n      // console.log( 'renderCollectionsByGenre Called' );\n      // console.log(' data is', typeof data.allMarkdownRemark.edges);\n\n      // create array from data object\n      let categories = []\n      let dataObject = data.allMarkdownRemark.edges;\n      let keys = [];\n      \n      for (let key in dataObject) {      \n          // console.log('data has property \"key\"', dataObject.hasOwnProperty(key));\n          // console.log('category is ', dataObject[key].node.frontmatter.category)\n          const category = dataObject[key].node.frontmatter.category;\n           \n           if (dataObject.hasOwnProperty(key)) { keys.push(key)};\n\n           let categoryIndex = categories.indexOf(category)\n           if (categoryIndex === -1){\n            categories.push(category)\n            arrayOfCollections.push({category, entries: [] })\n            categoryIndex = categories.length - 1;\n          }\n\n          const infoObject = dataObject[key].node.frontmatter\n          const adjustedObject = { ...infoObject, slug: dataObject[key].node.fields.slug}\n\n          arrayOfCollections[categoryIndex].entries.push(adjustedObject)\n      \n       }\n\n      // console.log('array of collections', arrayOfCollections)\n\n      return arrayOfCollections;\n    }\n\nreturn (\n  <Layout currentPath={url}>\n    <SEO title=\"Writing\" />\n\n    { renderCollectionsByGenre().map(( data, index ) => {\n      // console.log('sending this to WritingSection', data)\n      return ( <WritingSection key={\"collection_key_\" + index} title={data.category} entries={data.entries} parent={true} level={1} group_by_key={\"publication_type\"} /> )\n      })\n  }\n\n  </Layout>\n  )\n}\n\nexport const query = graphql`\nquery writingAll {\n  allMarkdownRemark(sort: {fields: [frontmatter___publication, frontmatter___date], order: [ASC, DESC]}, filter: {frontmatter: {category: {}, _xtypename: {eq: \"writing\"}}}) {\n    edges {\n      node {\n        id\n        excerpt(format: PLAIN)\n        frontmatter {\n          title\n          subtitle\n          publication\n          issue\n          publishers\n          ISBN\n          publication_type\n          editors\n          date(formatString: \"YYYY, MMMM\")\n          category\n          snippet\n          audio\n          video\n          tags\n          image {\n            childImageSharp {\n              fluid(fit: COVER, maxWidth: 800, maxHeight: 400, cropFocus: ENTROPY) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          link\n          publication\n          product\n          etsy\n        }\n        timeToRead\n        fields {\n          slug\n        }\n      }\n    }\n  }\n}`\n\nexport default WritingPage\n"],"sourceRoot":""}