{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPost","_ref","data","location","post","markdownRemark","url","href","title","DOI","ISBN","_xtypename","appear_on_index","audio","category","date","editors","etsy","etsyDescription","image_location","issue","issue_number","link","page","product","publication","publication_type","publishers","series","snippet","subtitle","tags","video","frontmatter","React","createElement","Layout","layout","currentPath","Fragment","dangerouslySetInnerHTML","__html","html","id","width","height","src","match","length","getId","frameBorder","allowFullScreen","class"],"mappings":"4FAAA,oFAIe,SAASA,EAAQC,GAAoB,IAAnB,KAACC,EAAI,SAAEC,GAASF,EAC7C,MAAMG,EAAOF,EAAKG,eACZC,EAAMH,EAASI,KAAOJ,EAASI,KAAO,IAEtC,MAAEC,EAAK,IACTC,EAAG,KACHC,EAAI,WACJC,EAAU,gBACVC,EAAe,MACfC,EAAK,SACLC,EAAQ,KACRC,EAAI,QACJC,EAAO,KACPC,EAAI,gBACJC,EAAe,eACfC,EAAc,MACdC,EAAK,aACLC,EAAY,KACZC,EAAI,KACJC,EAAI,QACJC,EAAO,YACPC,EAAW,iBACXC,EAAgB,WAChBC,EAAU,OACVC,EAAM,QACNC,EAAO,SACPC,EAAQ,KACRC,EAAI,MACJC,GAAS5B,EAAK6B,YAcpB,OACEC,IAAAC,cAACC,IAAM,CAACC,OAAO,SAASC,YAAahC,GACnC4B,IAAAC,cAAA,UAAK3B,GACHsB,GAAaI,IAAAC,cAAA,UAAML,GACrBI,IAAAC,cAAA,aACIpB,GAASmB,IAAAC,cAAAD,IAAAK,SAAA,KAAE,cAAYxB,EAAKmB,IAAAC,cAAA,YAC5BrB,GAAaoB,IAAAC,cAAAD,IAAAK,SAAA,KAAE,aAAWzB,EAAS,IAAGY,GAAsB,MAAKA,EAAoB,IAACQ,IAAAC,cAAA,YAEtFV,GAAgBS,IAAAC,cAAAD,IAAAK,SAAA,KAAE,gBAAaL,IAAAC,cAAA,UAAKV,EAAcL,GAAW,WAAUA,MAAec,IAAAC,cAAA,YACtFnB,GAAYkB,IAAAC,cAAAD,IAAAK,SAAA,KAAE,YAAUvB,EAAQkB,IAAAC,cAAA,YAChCR,GAAeO,IAAAC,cAAAD,IAAAK,SAAA,KAAE,eAAaZ,EAAWO,IAAAC,cAAA,YACzCd,GAAiBa,IAAAC,cAAAD,IAAAK,SAAA,KAAE,iBAAelB,EAAaa,IAAAC,cAAA,YAC/CZ,GAASW,IAAAC,cAAAD,IAAAK,SAAA,KAAE,SAAOhB,EAAKW,IAAAC,cAAA,YACvBP,GAAWM,IAAAC,cAAAD,IAAAK,SAAA,KAAE,WAASX,EAAOM,IAAAC,cAAA,YAC7B1B,GAAQyB,IAAAC,cAAAD,IAAAK,SAAA,KAAE,QAAM9B,EAAIyB,IAAAC,cAAA,YACpBzB,GAASwB,IAAAC,cAAAD,IAAAK,SAAA,KAAE,SAAO7B,EAAKwB,IAAAC,cAAA,aAEzBD,IAAAC,cAAA,WAEFD,IAAAC,cAAA,WAASK,wBAAyB,CAAEC,OAAQrC,EAAKsC,QAC/Cb,GAAYK,IAAAC,cAAA,OAAKQ,GAAG,UAAUH,wBAAyB,CAACC,OAAQrC,EAAK6B,YAAYJ,WACjFhB,GAAUqB,IAAAC,cAAA,SAAG,UAAQtB,GAGrBmB,GACAE,IAAAC,cAAA,UAAQ3B,MAAM,gBAAgBoC,MAAM,MAAMC,OAAO,MAAMC,IAAM,iCArC/D,SAAexC,GAEb,MACMyC,EAAQzC,EAAIyC,MADH,gEAIf,OAAQA,GAA6B,KAApBA,EAAM,GAAGC,OAAiBD,EAAM,GAAK,KA+BwCE,CAAMjB,GAAWkB,YAAY,IAAIC,iBAAe,IAE9I3B,GAAYU,IAAAC,cAAA,SAAG,YAAUX,GACzBF,GAASY,IAAAC,cAAA,SAAGD,IAAAC,cAAA,KAAG5B,KAAK,SAAS6C,MAAM,sBAAqBlB,IAAAC,cAAA,SAAG,qBAE7DD,IAAAC,cAAA,WACEJ,GAASG,IAAAC,cAAAD,IAAAK,SAAA,KAAGR","file":"component---src-templates-blog-post-js-14053ed77b6f75d1b0ae.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nexport default function BlogPost({data, location}) {\n    const post = data.markdownRemark\n    const url = location.href ? location.href : '';\n    \n    const { title,\n        DOI,\n        ISBN,\n        _xtypename,\n        appear_on_index,\n        audio,\n        category,\n        date,\n        editors,\n        etsy,\n        etsyDescription,\n        image_location,\n        issue,\n        issue_number,\n        link,\n        page,\n        product,\n        publication,\n        publication_type,\n        publishers,\n        series,\n        snippet,\n        subtitle,\n        tags,\n        video} = post.frontmatter; \n\n      function getId(url) {\n        // console.log('extracting url:', url)\n        const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n        const match = url.match(regExp);\n        // console.log('regExp mnatch:', match)\n\n        return (match && match[2].length === 11) ? match[2] : null;\n      }\n\n      // const videoID = getId(video);\n      // console.log('videoID:', videoID)\n\n  return (\n    <Layout layout=\"single\" currentPath={url}>\n      <h1>{title}</h1>\n      { subtitle && (<h2>{ subtitle }</h2>)}\n      <aside>\n        { date && (<>published: {date}<br /></>)} \n        { category && (<>category: {category} { publication_type && (`// ${publication_type}`)} <br /></>)}\n\n        { publication && (<>publication: <em>{publication}{ issue && (` (issue ${issue})`)}</em><br /></>)}\n        { editors && (<>editors: {editors}<br /></>)}\n        { publishers && (<>publishers: {publishers}<br /></>)}\n        { issue_number && (<>issue_number: {issue_number}<br /></>)}\n        { page && (<>page: {page}<br /></>)}\n        { series && (<>series: {series}<br /></>)}\n        { DOI && (<>DOI: {DOI}<br /></>) }\n        { ISBN && (<>ISBN: {ISBN}<br /></>) }\n      </aside>\n        <hr />\n\n      <article dangerouslySetInnerHTML={{ __html: post.html }}></article>\n      { snippet && (<div id=\"snippet\" dangerouslySetInnerHTML={{__html: post.frontmatter.snippet }}/>)}\n      { audio && (<p>audio: {audio}</p>)}\n    \n\n      { video && (\n        <iframe title=\"video_on_page\" width=\"560\" height=\"315\" src={`https://www.youtube.com/embed/${(getId(video))}`} frameBorder=\"0\" allowFullScreen />)}\n\n      { product && (<p>product: {product}</p>)}\n      { link && (<p><a href=\"{link}\" class=\"underline-override\"><b>[external link]</b></a></p>)}\n\n      <hr />\n      { tags && (<>{tags}</>)}\n\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        DOI\n        ISBN\n        _xtypename\n        appear_on_index\n        audio\n        category\n        date\n        editors\n        etsy\n        etsyDescription\n        image_location\n        issue\n        issue_number\n        link\n        page\n        product\n        publication\n        publication_type\n        publishers\n        series\n        snippet\n        subtitle\n        tags\n        video\n      }\n    }\n  }\n`\n"],"sourceRoot":""}